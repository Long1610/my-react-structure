import { createSlice } from "@reduxjs/toolkit";
import { RootState } from "../../app/store";
import { fetchPosts } from "./postThunk";

export interface PostsState {
  list: Array<any>;
  status: "idle" | "loading" | "failed";
}

const initialState: PostsState = {
  list: [],
  status: "idle",
};

export const postsSlice = createSlice({
  name: "posts",
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {},
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
    builder
      .addCase(fetchPosts.pending, (state) => {
        state.status = "loading";
      })
      .addCase(fetchPosts.fulfilled, (state, action) => {
        state.status = "idle";
        state.list = action.payload;
      })
      .addCase(fetchPosts.rejected, (state) => {
        state.status = "failed";
      });
  },
});

export const posts = (state: RootState) => state.posts.list;

export default postsSlice.reducer;
